apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

android {
    def config = rootProject.extensions.getByName("ext")

    compileSdkVersion config["compile_sdk"]
    defaultConfig {
        applicationId config["application_id"]
        minSdkVersion config["min_sdk"]
        targetSdkVersion config["target_sdk"]
        versionCode config["version_code"]
        versionName config["version_name"]
        testInstrumentationRunner config["test_runner"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def applicationDependencies = rootProject.ext.mainApplication
    def unitTestDependencies = rootProject.ext.unitTesting
    def acceptanceTestDependencies = rootProject.ext.acceptanceTesting
    def developmentDependencies = rootProject.ext.development

    //Compile time dependencies
    kapt applicationDependencies.daggerCompiler
    kapt applicationDependencies.lifeCycleCompiler

    //Application dependencies
    implementation applicationDependencies.kotlin
    implementation applicationDependencies.appCompat
    implementation applicationDependencies.material
    implementation applicationDependencies.androidXCore
    implementation applicationDependencies.lifeCycle
    implementation applicationDependencies.constraintLayout
    implementation applicationDependencies.dagger

    //Unit/Integration tests dependencies
    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.mockito
    testImplementation unitTestDependencies.kluent
    testImplementation unitTestDependencies.roboelectric

    //Acceptance tests dependencies
    androidTestImplementation acceptanceTestDependencies.testRunner
    androidTestImplementation acceptanceTestDependencies.espressoCore

    //Development dependencies
    debugImplementation developmentDependencies.leakCanary
    releaseImplementation developmentDependencies.leakCanaryNoop
    testImplementation developmentDependencies.leakCanaryNoop

}
